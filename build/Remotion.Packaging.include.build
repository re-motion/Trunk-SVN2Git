<?xml version="1.0" encoding="UTF-8" ?>
<!-- This file is part of the re-motion Core Framework (www.re-motion.org)
 ! Copyright (c) rubicon IT GmbH, www.rubicon.eu
 ! 
 ! The re-motion Core Framework is free software; you can redistribute it 
 ! and/or modify it under the terms of the GNU Lesser General Public License 
 ! as published by the Free Software Foundation; either version 2.1 of the 
 ! License, or (at your option) any later version.
 ! 
 ! re-motion is distributed in the hope that it will be useful, 
 ! but WITHOUT ANY WARRANTY; without even the implied warranty of 
 ! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 ! GNU Lesser General Public License for more details.
 ! 
 ! You should have received a copy of the GNU Lesser General Public License
 ! along with re-motion; if not, see http://www.gnu.org/licenses.
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Target Name="CreatePackageProperties">
    <Error Text="The target 'CreatePackageProperties' is not implemented." />
  </Target>

  <Target Name="CreateSourceFiles" DependsOnTargets="CreateStandardExcludes">
    <Error Text="The target 'CreateSourceFiles' is not implemented." />
  </Target>

  <Target Name="CreateBinaryFiles" DependsOnTargets="CreateStandardExcludes">
    <Error Text="The target 'CreateBinaryFiles' is not implemented." />
  </Target>

  <Target Name="CreateLicenseFiles" DependsOnTargets="CreateStandardExcludes">
    <Error Text="The target 'CreateLicenseFiles' is not implemented." />
  </Target>

  <PropertyGroup>
    <MSBuildExtensionPackPath>$(SolutionDirectory)\prereq\Tools\MSBuildExtensionPack\</MSBuildExtensionPackPath>
    <JiraReleaseNoteGeneratorPath>$(SolutionDirectory)\prereq\Tools\JiraReleaseNoteGenerator\</JiraReleaseNoteGeneratorPath>
    <CodeplexReleaseToolPath>$(SolutionDirectory)\prereq\Tools\CodeplexReleaseTool\</CodeplexReleaseToolPath>
    <CodeplexTasksPath>$(SolutionDirectory)prereq\Tools\Codeplex.MSBuildTasks\</CodeplexTasksPath>
  </PropertyGroup>

  <Import Project="Remotion.Tasks.include.build" />
  <Import Project="Remotion.DependDB.include.build" />

  <Target Name="CreatePackages" DependsOnTargets="CreateZipPackages;CreateDependDBPackages;CreateAndAddReleaseNotes"/>
  <Target Name="CreateZipPackages" DependsOnTargets="CreateSourcePackage;CreateBinaryPackage"/>

  <Target Name="DeployPackages" DependsOnTargets="UploadReleaseNotes;UploadToShares;UploadToCodePlex;UploadToDependDB" />
    
  <!-- Source Package -->
  
  <Target Name="CreateSourcePackage" DependsOnTargets="CreateSourceZipFileProperty;CreateSourceFiles;CreateOutputDirectory;">
    <Message Text="Creating source package, PackageName=$(PackageName)" Importance="High"/>

    <Error Text="The property 'SolutionDirectory' is not set." Condition="'$(SolutionDirectory)' == ''" />

    <MSBuild.ExtensionPack.Compression.DNZip TaskAction="Create" 
                                             ZipFileName="$(SourceZipFile)" 
                                             RemoveRoot="$(SolutionDirectory)" 
                                             CompressFiles="@(SourceFiles)" />

    <Message Text="Done creating source package, PackageName=$(PackageName)" Importance="High"/>
  </Target>

  <Target Name="CreateSourceZipFileProperty" DependsOnTargets="CreatePackageProperties">
    <Error Text="The property 'OutputDirectory' is not set." Condition="'$(OutputDirectory)' == ''" />
    <Error Text="The property 'Version' is not set." Condition="'$(Version)' == ''" />

    <PropertyGroup>
      <SourceZipFile>$(OutputDirectory)$(PackageName)_SourceCode_$(Version).zip</SourceZipFile>
    </PropertyGroup>
  </Target>

  <!-- Binary Package -->

  <Target Name="CreateBinaryPackage" DependsOnTargets="CreateBinaryZipFileProperty;CreateBinaryFiles;CreateLicenseFiles;CreateOutputDirectory;">
    <Message Text="Creating binary package, PackageName=$(PackageName)" Importance="High"/>

    <Error Text="The property 'OutputDirectory' is not set." Condition="'$(OutputDirectory)' == ''" />

    <MSBuild.ExtensionPack.Compression.DNZip TaskAction="Create"
                                             ZipFileName="$(BinaryZipFile)"
                                             RemoveRoot="$(BinariesDirectory)"
                                             CompressFiles="@(BinaryFiles)" />

    <PropertyGroup>
      <_tempLicenseFilesDirectory>$(TempDirectory)$([System.Guid]::NewGuid())\</_tempLicenseFilesDirectory>
    </PropertyGroup>

    <Copy DestinationFolder="$(_tempLicenseFilesDirectory)license" SourceFiles="@(LicenseFiles)" />

    <ItemGroup>
      <_tempLicenseFiles Remove="@(_tempReleaseNoteFiles)"/>
      <_tempLicenseFiles Include="$(_tempLicenseFilesDirectory)\**" />
    </ItemGroup>


    <MSBuild.ExtensionPack.Compression.DNZip TaskAction="AddFiles"
                                             ZipFileName="$(BinaryZipFile)"
                                             RemoveRoot="$(_tempLicenseFilesDirectory)"
                                             CompressFiles="@(_tempLicenseFiles)" />

    <Message Text="Done creating binary package, PackageName=$(PackageName)" Importance="High"/>
  </Target>

  <Target Name="CreateBinaryZipFileProperty" DependsOnTargets="CreatePackageProperties">
    <Error Text="The property 'OutputDirectory' is not set." Condition="'$(OutputDirectory)' == ''" />
    <Error Text="The property 'Version' is not set." Condition="'$(Version)' == ''" />

    <PropertyGroup>
      <BinaryZipFile>$(OutputDirectory)$(PackageName)_$(Version).zip</BinaryZipFile>
    </PropertyGroup>
  </Target>

  <!-- Release Notes -->
  
  <Target Name="CreateAndAddReleaseNotes" DependsOnTargets="CopyReleaseNotesFromShareToTemp;CreateReleaseNotes;AddReleaseNotesToBinaryPackage;CopyNewReleaseNotesFromTempToOutput"/>

  <Target Name="CopyReleaseNotesFromShareToTemp" DependsOnTargets="CreateReleaseNotesProperties">
    <Message Text="Copy release notes from share to local temp directory..." Importance="High"/>
    
    <PropertyGroup>
      <_regexVersionPatten>v(?&lt;version&gt;\d+\.\d+\.\d+(\.\d+)?)$</_regexVersionPatten>
    </PropertyGroup>
    
    <ItemGroup>
      <_releaseNoteFiles Remove="@(_releaseNoteFiles)"/>
      <_releaseNoteFiles Include="$(ReleaseNotesRemoteShareDirectory)*.*" />
      <_releaseNoteFiles>
        <Version>$([System.Text.RegularExpressions.Regex]::Match (%(FileName), $(_regexVersionPatten)).Groups[&quot;version&quot;].Value)</Version>
      </_releaseNoteFiles>

      <_emptyReleaseNoteFiles Remove="@(_emptyReleaseNoteFiles)"/>
      <_emptyReleaseNoteFiles Include="@(_releaseNoteFiles)"
                              Condition="$([System.IO.File]::ReadAllText (%(Identity)).Length) == 0"/>

      <_futureReleaseNoteFiles Remove="@(_futureReleaseNoteFiles)"/>
      <_futureReleaseNoteFiles Include="@(_releaseNoteFiles)"
                               Condition="$( [System.Version]::Parse ($(Version)).CompareTo ( $([System.Version]::Parse (%(Version))) ) ) &lt; 0"/>

      <_releaseNoteFiles Remove="@(_emptyReleaseNoteFiles)" />
      <_releaseNoteFiles Remove="@(_futureReleaseNoteFiles)" />
    </ItemGroup>

    <Copy SourceFiles="@(_releaseNoteFiles)" DestinationFolder="$(ReleaseNotesLocalTempDirectory)"/>

    <ItemGroup>
      <OldReleaseNoteFiles Remove="@(OldReleaseNoteFiles)"/>
      <OldReleaseNoteFiles Include="$(ReleaseNotesLocalTempDirectory)*.*"/>
    </ItemGroup>

    <Message Text="Done copy release notes from share to local temp directory." Importance="High"/>
  </Target>

  <Target Name="CreateReleaseNotes" DependsOnTargets="CreateReleaseNotesProperties">
    <Message Text="Creating release notes, PackageName=$(PackageName)" Importance="High"/>

    <PropertyGroup>
      <_jiraComponent Condition="$(ReleaseNotesComponentName) == ''"></_jiraComponent>
      <_jiraComponent Condition="$(ReleaseNotesComponentName) != ''">component='$(ReleaseNotesComponentName)'</_jiraComponent>
    </PropertyGroup>

    <Exec Command="JiraReleaseNoteGenerator.exe $(Version) $(ReleaseNotesLocalTempDirectory) $(_jiraComponent)"
          WorkingDirectory="$(JiraReleaseNoteGeneratorPath)" />
    
    <Message Text="Done creating release notes, PackageName=$(PackageName)" Importance="High"/>
  </Target>

  <Target Name="AddReleaseNotesToBinaryPackage" DependsOnTargets="CreateBinaryZipFileProperty;CreateReleaseNotesProperties">
    <Error Text="Binary zip-file $(BinaryZipFile) is missing." Condition="!Exists('$(BinaryZipFile)')"  />
    
    <ItemGroup>
      <_tempReleaseNoteFiles Remove="@(_tempReleaseNoteFiles)"/>
      <_tempReleaseNoteFiles Include="$(ReleaseNotesLocalTempDirectory)**" />
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.DNZip TaskAction="AddFiles"
                                             ZipFileName="$(BinaryZipFile)"
                                             RemoveRoot="$(ReleaseNotesLocalTempDirectoryRoot)"
                                             CompressFiles="@(_tempReleaseNoteFiles)"
                                             Condition="@(_tempReleaseNoteFiles) != ''"/>
  </Target>

  <Target Name="CopyNewReleaseNotesFromTempToOutput" DependsOnTargets="CreateReleaseNotesProperties">
    <Message Text="Copy new release notes from local temp directory to local output directory..." Importance="High"/>
    
    <ItemGroup>
      <_newReleaseNoteFiles Remove="@(_newReleaseNoteFiles)"/>
      <_newReleaseNoteFiles Include="$(ReleaseNotesLocalTempDirectory)*.*"/>
      <_newReleaseNoteFiles Remove="@(OldReleaseNoteFiles)"/>
    </ItemGroup>
    
    <Message Text="New release note files: '@(_newReleaseNoteFiles)'" Importance="High"/>
    <Copy SourceFiles="@(_newReleaseNoteFiles)" DestinationFolder="$(ReleaseNotesLocalOutputDirectory)"/>

    <Message Text="Done copy new release notes from local temp directory to local output directory." Importance="High"/>
  </Target>
  
  <Target Name="UploadReleaseNotes" DependsOnTargets="CreatePackageProperties;CreateReleaseNotesProperties">
    <Message Text="Uploading release notes, PackageName=$(PackageName)" Importance="High"/>

    <ItemGroup>
      <_releaseNoteFiles Remove="@(_releaseNoteFiles)"/>
      <_releaseNoteFiles Include="$(ReleaseNotesLocalOutputDirectory)**" />
    </ItemGroup>

    <Copy SourceFiles="@(_releaseNoteFiles)" DestinationFolder="$(ReleaseNotesRemoteShareDirectory)"/>
    
    <Message Text="Done uploading release notes, PackageName=$(PackageName)" Importance="High"/>
  </Target>

  <Target Name="CreateReleaseNotesProperties" DependsOnTargets="CreatePackageProperties">
    <Error Text="The property 'ArchiveDirectory' is not set." Condition="'$(ArchiveDirectory)' == ''" />

    <PropertyGroup>
      <_releaseNotesVersionDirectory>$([System.Version]::Parse ($(Version)).ToString (2))</_releaseNotesVersionDirectory>

      <ReleaseNotesLocalTempDirectoryRoot>$(TempDirectory)\$([System.Guid]::NewGuid())\</ReleaseNotesLocalTempDirectoryRoot>
      <ReleaseNotesLocalTempDirectory>$(ReleaseNotesLocalTempDirectoryRoot)release-notes\</ReleaseNotesLocalTempDirectory>
      <ReleaseNotesLocalOutputDirectory>$(OutputDirectory)ReleaseNotes\</ReleaseNotesLocalOutputDirectory>
      <ReleaseNotesRemoteShareDirectory>$(ArchiveDirectory)$(PackageName)\release-notes\$(_releaseNotesVersionDirectory)\</ReleaseNotesRemoteShareDirectory>
    </PropertyGroup>
  </Target>

  <!-- Publishing -->

  <Target Name="UploadToShares" DependsOnTargets="CreateSourceZipFileProperty;CreateBinaryZipFileProperty">
    <Message Text="Uploading to shares, PackageName=$(PackageName)" Importance="High"/>

    <Error Text="The property 'ArchiveDirectory' is not set." Condition="'$(ArchiveDirectory)' == ''" />
    <Error Text="The property 'WebShareDirectory' is not set." Condition="'$(WebShareDirectory)' == ''" />

    <ItemGroup>
      <_temp Remove="@(_temp)"/>
      <_temp Include="$(SourceZipFile);$(BinaryZipFile)">
        <DestinationFolder>$(ArchiveDirectory)$(PackageName)\build\</DestinationFolder>
      </_temp>
      <_temp Include="$(SourceZipFile);$(BinaryZipFile)" Condition="($(UploadToWebShare) == 'True')">
        <DestinationFolder>$(WebShareDirectory)</DestinationFolder>
      </_temp>
    </ItemGroup>

    <ItemGroup>
      <_publishedFiles Remove="@(_publishedFiles)"/>
      <_publishedFiles Include="@(_temp)">
        <DestinationFolder>%(DestinationFolder)</DestinationFolder>
        <DestinationFile>%(DestinationFolder)%(FileName)%(Extension)</DestinationFile>
      </_publishedFiles>
    </ItemGroup>

    <Error Text="The file '%(_publishedFiles.FileName)%(_publishedFiles.Extension)' already exists in the destination folder '%(_publishedFiles.DestinationFolder)'."
           Condition="Exists (%(_publishedFiles.DestinationFile))"/>

    <Copy SourceFiles="%(_publishedFiles.Identity)" DestinationFiles="%(_publishedFiles.DestinationFile)"/>

    <Message Text="Done uploading to shares, PackageName=$(PackageName)" Importance="High"/>
  </Target>

  <Target Name="UploadToCodePlex" DependsOnTargets="CreatePackageProperties;CheckUploadToCodePlex;UploadToCodePlexInternal" />
  
  <Target Name="CheckUploadToCodePlex" DependsOnTargets="CreateReleaseNotesProperties">
    <PropertyGroup>
      <_releaseNotesFile>$(ReleaseNotesLocalTempDirectory)ReleaseNotes_v$(Version).html</_releaseNotesFile>
      <_hasResolvedIssues Condition="Exists ($(_releaseNotesFile)) AND $([System.IO.File]::ReadAllText ($(_releaseNotesFile)).Length) > 0">True</_hasResolvedIssues>
      <UploadToCodePlex Condition="$(UploadToCodePlex) == 'True' AND $(_hasResolvedIssues) != 'True'">False</UploadToCodePlex>
    </PropertyGroup>
  </Target>
  
  <Target Name="UploadToCodePlexInternal"
          DependsOnTargets="CreateSourceZipFileProperty;CreateBinaryZipFileProperty"
          Condition="$(UploadToCodePlex) == 'True'">

    <Message Text="Uploading to CodePlex, PackageName=$(PackageName)" Importance="High"/>

    <Error Text="The property 'CodePlexProjectName' is not set." Condition="'$(CodePlexProjectName)' == ''" />
    <Error Text="The property 'CodePlexDescription' is not set." Condition="'$(CodePlexDescription)' == ''" />

    <PropertyGroup>
      <_releaseDate>$([System.DateTime]::Now.ToString('yyyy-MM-dd'))</_releaseDate>
    </PropertyGroup>

    <Exec Command="CodeplexReleaseTool.exe createRelease /projectName:$(CodePlexProjectName) /releaseName:$(Version) /description:&quot;$(CodePlexDescription)&quot; /releaseDate:$(_releaseDate) /status:Stable /showToPublic:+ /isDefaultRelease:+ /username:$(CodeplexUsername) /password:$(CodeplexPassword)"
          WorkingDirectory="$(CodeplexReleaseToolPath)" />

    <Exec Command="CodeplexReleaseTool.exe uploadReleaseFiles /projectName:$(CodePlexProjectName) /releaseName:$(Version) /fileDisplayName:$([System.IO.Path]::GetFileName($(BinaryZipFile))) /fileDataPath:$(BinaryZipFile) /fileType:RuntimeBinary /username:$(CodeplexUsername) /password:$(CodeplexPassword)"
          WorkingDirectory="$(CodeplexReleaseToolPath)" />

    <Exec Command="CodeplexReleaseTool.exe uploadReleaseFiles /projectName:$(CodePlexProjectName) /releaseName:$(Version) /fileDisplayName:$([System.IO.Path]::GetFileName($(SourceZipFile))) /fileDataPath:$(SourceZipFile) /fileType:SourceCode /username:$(CodeplexUsername) /password:$(CodeplexPassword)"
          WorkingDirectory="$(CodeplexReleaseToolPath)" />

    <!--<ItemGroup>
      <_releaseFiles Remove="@(_releaseFiles)"/>
      <_releaseFiles Include="$(BinaryZipFile)">
        <Name>$([System.IO.Path]::GetFileName($(BinaryZipFile)))</Name>
        <FileType>RuntimeBinary</FileType>
      </_releaseFiles>
      <_releaseFiles Include="$(SourceZipFile)">
        <Name>$([System.IO.Path]::GetFileName($(SourceZipFile)))</Name>
        <FileType>SourceCode</FileType>
      </_releaseFiles>
    </ItemGroup>
    
    <CreateRelease
      ProjectName="$(CodePlexProjectName)"  
      ReleaseName="$(Version)"
      Description="$(CodePlexDescription)"
      ReleaseDate="$(_releaseDate)"
      ReleaseStatus="Released"
      ShowToPublic="false"
      IsDefaultRelease="false"
      ShowOnHomepage="false"
      Username="$(CodeplexUsername)"
      Password="$(CodeplexPassword)" >
    </CreateRelease>

    <UploadFiles
      ProjectName="$(CodePlexProjectName)"
      ReleaseName="$(Version)"
      ReleaseFiles="@(_releaseFiles)"
      Username="$(CodeplexUsername)"
      Password="$(CodeplexPassword)" >
    </UploadFiles>-->

    <Message Text="Done uploading to CodePlex, PackageName=$(PackageName)" Importance="High"/>
  </Target>

  <!-- Shared Code -->
  
  <Target Name="CreateOutputDirectory">
    <Error Text="The property 'OutputDirectory' is not set." Condition="'$(OutputDirectory)' == ''" />

    <MakeDir Directories="$(OutputDirectory)" />
  </Target>

  <Target Name="CreateStandardExcludes">
    <Error Text="The property 'SolutionDirectory' is not set." Condition="'$(SolutionDirectory)' == ''" />

    <ItemGroup>
      <StandardExcludes Include="$(SolutionDirectory)**\.svn\**"/>
      <StandardExcludes Include="$(SolutionDirectory)**\_svn\**"/>

      <StandardExcludes Include="$(SolutionDirectory)**\*.log" />
      <StandardExcludes Include="$(SolutionDirectory)**\Remotion.snk" />
      <StandardExcludes Include="$(SolutionDirectory)**\*.suo" />
      <StandardExcludes Include="$(SolutionDirectory)**\*.user" />
    </ItemGroup>
  </Target>

</Project>