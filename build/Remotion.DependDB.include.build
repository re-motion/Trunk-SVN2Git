<?xml version="1.0" encoding="UTF-8" ?>
<!-- This file is part of the re-motion Core Framework (www.re-motion.org)
 ! Copyright (c) rubicon IT GmbH, www.rubicon.eu
 ! 
 ! The re-motion Core Framework is free software; you can redistribute it 
 ! and/or modify it under the terms of the GNU Lesser General Public License 
 ! as published by the Free Software Foundation; either version 2.1 of the 
 ! License, or (at your option) any later version.
 ! 
 ! re-motion is distributed in the hope that it will be useful, 
 ! but WITHOUT ANY WARRANTY; without even the implied warranty of 
 ! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 ! GNU Lesser General Public License for more details.
 ! 
 ! You should have received a copy of the GNU Lesser General Public License
 ! along with re-motion; if not, see http://www.gnu.org/licenses.
-->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

<!--
 ! DependDB MSBuild integration
 ! ============================
 ! This MSBuild project prepares all necessary data in order to import a new version of the project
 ! into the DependDB. The result (an XML file) is copied to the live-watched import directory of the
 ! DependDB import service (DependDB.Receiver), which is doing the actual import automatically
 ! overnight.
 ! ============================
 ! The main target is "DependDB" and should be run after the project's assemblies have been built.
-->

  <PropertyGroup>
    <DependDBBuildProcessorTool>$(SolutionDirectory)prereq\tools\DependDB\DependDB.BuildProcessor\DependDB.BuildProcessor.exe</DependDBBuildProcessorTool>
  </PropertyGroup>
  
  
  <!-- Targets -->
  <Target Name="CreateDependDBPackages" DependsOnTargets="CreatePackageProperties;CreateDependDBProperties;DependDBBuildProcessing" Condition="$(UploadToDependDB) == 'True'"/>
  <Target Name="UploadToDependDB" DependsOnTargets="CreatePackageProperties;CreateDependDBProperties;UploadToDependDBInternal" Condition="$(UploadToDependDB) == 'True'"/>
  
  
  <!-- Abstract internal targets -->
  <Target Name="CreateDependDBBinaryFiles">
	<Error Text="The target 'CreateDependDBBinaryFiles' is not implemented." />
  </Target>
  
  <!-- Internal targets: Build processing -->    
  <Target Name="DependDBBuildProcessing" DependsOnTargets="CreatePackageProperties;CreateDependDBProperties;CreateDependDBConfigurationFile">
    <Message Text="Started DependDB build processing, ProjectName=$(DependDBProjectName)" Importance="High"/>
  
    <!-- Execute build processor -->
    <Exec Command="$(DependDBBuildProcessorTool) &quot;$(DependDBConfigurationFile)&quot;"/>
  
    <Message Text="Finished DependDB build processing, ProjectName=$(DependDBProjectName)" Importance="High"/>
  </Target>
  
  <Target Name="CreateDependDBProperties" DependsOnTargets="CreatePackageProperties">
    <PropertyGroup>
      <DependDBProjectDirectory>$(TempDirectory)DependDB\$([System.Guid]::NewGuid())\</DependDBProjectDirectory>
      <DependDBConfigurationTemplate>$(MSBuildProjectDirectory)\DependDB.ConfigurationTemplate.xml</DependDBConfigurationTemplate>
      <DependDBConfigurationFile>$(DependDBProjectDirectory)DependDB.Configuration.xml</DependDBConfigurationFile>
      <DependDBBinariesDirectory>$(DependDBProjectDirectory)Temp\</DependDBBinariesDirectory>
      <DependDBProjectOutputDirectory>$(DependDBProjectDirectory)Output\</DependDBProjectOutputDirectory>
    </PropertyGroup>
  </Target>
  
  <Target Name="PrepareCreateDependDBBinaryFiles" DependsOnTargets="CreateBinaryFiles">
    <!-- Copy required binary files to temporary directory -> otherwise XReferencer would analyze other sub project's DLLs in directory -->
    <Copy SourceFiles="@(BinaryFiles)" DestinationFolder="$(DependDBBinariesDirectory)"/>
  </Target>
  
  <Target Name="CreateDependDBConfigurationFile" DependsOnTargets="CreatePackageProperties;CreateDependDBProperties;PrepareCreateDependDBBinaryFiles;CreateDependDBBinaryFiles">
    <Error Text="The property 'DependDBProjectName' is not set." Condition="'$(DependDBProjectName)' == ''" />
    <Error Text="The property 'DependDBExecuteXReferencer' is not set." Condition="'$(DependDBExecuteXReferencer)' == ''" />
    <Error Text="The property 'DependDBProjectBranch' is not set." Condition="'$(DependDBProjectBranch)' == ''" />
    <Error Text="The property 'DependDBProjectVersion' is not set." Condition="'$(DependDBProjectVersion)' == ''" />
    <Error Text="The property 'DependDBProjectVCSUrlTemplate' is not set." Condition="'$(DependDBProjectVCSUrlTemplate)' == ''" />
    <Error Text="The property 'DependDBProjectImportNotificationMailAddress' is not set." Condition="'$(DependDBProjectImportNotificationMailAddress)' == ''" />
    <Error Text="The property 'DependDBProjectDirectory' is not set." Condition="'$(DependDBProjectDirectory)' == ''" />
      
    <!-- DependDB configuration: General settings -->
    <PropertyGroup>
      <BaseXPath>/c:BuildProcessorConfiguration</BaseXPath>
      <SettingsXPath>$(BaseXPath)/c:Settings</SettingsXPath>
      <DependDBAssemblyXPath>$(SettingsXPath)/c:ProjectAssemblyFiles</DependDBAssemblyXPath>
      <DependDBXReferencerXPath>$(BaseXPath)/c:ReportGenerators/c:ReportGenerator[@name='XReferencer']</DependDBXReferencerXPath>
    </PropertyGroup>
    <ItemGroup>
      <_config Include="DependDBProjectName">
        <XPath>$(SettingsXPath)/c:ProjectName</XPath>
        <Value>$(DependDBProjectName)</Value>
      </_config>
      <_config Include="DependDBProjectBranch">
        <XPath>$(SettingsXPath)/c:ProjectBranch</XPath>
        <Value>$(DependDBProjectBranch)</Value>
      </_config>
      <_config Include="DependDBProjectVersion">
        <XPath>$(SettingsXPath)/c:ProjectVersion</XPath>
        <Value>$(DependDBProjectVersion)</Value>
      </_config>
      <_config Include="DependDBProjectSourceRoot">
        <XPath>$(SettingsXPath)/c:SourceDirectoryRoot</XPath>
        <Value>$([System.IO.Path]::GetFullPath('$(SolutionDirectory)'))</Value>
      </_config>
      <_config Include="DependDBProjectVCSUrlTemplate">
        <XPath>$(SettingsXPath)/c:SourceControlUrlTemplate</XPath>
        <Value>$(DependDBProjectVCSUrlTemplate)</Value>
      </_config>
      <_config Include="DependDBProjectRetentionTime">
        <XPath>$(SettingsXPath)/c:RetentionTime</XPath>
        <Value>30</Value> <!-- in days -->
      </_config>
      <_config Include="DependDBProjectImportNotificationMailAddress">
        <XPath>$(SettingsXPath)/c:NotificationAddresses/c:To</XPath>
        <Value>$(DependDBProjectImportNotificationMailAddress)</Value>
      </_config>
    </ItemGroup>
    <!-- DependDB configuration: Analyzer -->
    <ItemGroup>
      <_configAddElements Include="DependDBTrackedReferenceFilter">
        <XPath>$(BaseXPath)/c:ReportGenerators/c:ReportGenerator[@name='Analyzer']/c:ComplexParameter[@name='trackedReferenceFilter']/c:TrackedReferenceFilter</XPath>
        <Element>c:Include</Element>
        <Value></Value>
        <AttrKey>filter</AttrKey>
        <AttrValue>Remotion*</AttrValue>
      </_configAddElements>
      <_configAddElements Include="DependDBTrackedReferenceFilter">
        <XPath>$(BaseXPath)/c:ReportGenerators/c:ReportGenerator[@name='Analyzer']/c:ComplexParameter[@name='trackedReferenceFilter']/c:TrackedReferenceFilter</XPath>
        <Element>c:Include</Element>
        <Value></Value>
        <AttrKey>filter</AttrKey>
        <AttrValue>Rubicon.*</AttrValue>
      </_configAddElements>
      <_configAddElements Include="DependDBTrackedReferenceFilter">
        <XPath>$(BaseXPath)/c:ReportGenerators/c:ReportGenerator[@name='Analyzer']/c:ComplexParameter[@name='trackedReferenceFilter']/c:TrackedReferenceFilter</XPath>
        <Element>c:Exclude</Element>
        <Value></Value>
        <AttrKey>filter</AttrKey>
        <AttrValue>Rubicon.Silverlight</AttrValue>
      </_configAddElements>
    </ItemGroup>
    <!-- DependDB configuration: XReferencer -->
    <ItemGroup>
      <_configAttributes Include="DependDBXReferencerReflector">
        <XPath>$(BaseXPath)/c:ReportGenerators/c:ReportGenerator[@name='XReferencer']/c:StringParameter[@name='reflector']</XPath>
        <Key>value</Key>
        <Value>MixinXRef.Reflectors.dll</Value>
      </_configAttributes>
    </ItemGroup>
    <!-- DependDB configuration: FileSender -->
    <ItemGroup>
      <_configAttributes Include="DependDBFileSenderCompress">
        <XPath>$(BaseXPath)/c:Senders/c:Sender[@name='FileSender']/c:BoolParameter[@name='compress']</XPath>
        <Key>value</Key>
        <Value>false</Value>
      </_configAttributes>
      <_configAttributes Include="DependDBFileSenderOutputPath">
        <XPath>$(BaseXPath)/c:Senders/c:Sender[@name='FileSender']/c:StringParameter[@name='outputPath']</XPath>
        <Key>value</Key>
        <Value>$(DependDBProjectOutputDirectory)</Value>
      </_configAttributes>
    </ItemGroup>
    
    <!-- Ensure DependDB temp directory is present and empty -->
    <RemoveDir Directories="$(DependDBProjectOutputDirectory)"/>
    <MakeDir Directories="$(DependDBProjectOutputDirectory)"/>
                    
    <!-- Create configuration file from template -->
    <Copy SourceFiles="$(DependDBConfigurationTemplate)" DestinationFiles="$(DependDBConfigurationFile)"/>
    
    <!-- Fill configuration file -->
    <ItemGroup>
      <_dependDBConfigurationNamespaces Remove="@(_dependDBConfigurationNamespaces)"/>
      <_dependDBConfigurationNamespaces Include="BuildProcessorConfiguration">
        <Prefix>c</Prefix>
        <Uri>http://rubicon.eu/BuildProcessorConfiguration</Uri>
      </_dependDBConfigurationNamespaces>
    </ItemGroup>
        
    <MSBuild.ExtensionPack.Xml.XmlFile TaskAction="UpdateElement"
                                       File="$(DependDBConfigurationFile)"
                                       XPath="%(_config.XPath)"
                                       InnerText="%(_config.Value)"
                                       Namespaces="@(_dependDBConfigurationNamespaces)"/>
                                       
    <MSBuild.ExtensionPack.Xml.XmlFile TaskAction="UpdateAttribute"
                                       File="$(DependDBConfigurationFile)"
                                       XPath="%(_configAttributes.XPath)"
                                       Key="%(_configAttributes.Key)"
                                       Value="%(_configAttributes.Value)"
                                       Namespaces="@(_dependDBConfigurationNamespaces)"/>
                                       
    <MSBuild.ExtensionPack.Xml.XmlFile TaskAction="AddElement"
                                       File="$(DependDBConfigurationFile)"
                                       XPath="%(_configAddElements.XPath)"
                                       Element="%(_configAddElements.Element)"
                                       InnerText="%(_configAddElements.Value)"
                                       Key="%(_configAddElements.AttrKey)"
                                       Value="%(_configAddElements.AttrValue)"
                                       Namespaces="@(_dependDBConfigurationNamespaces)"/>
                                       
    <MSBuild.ExtensionPack.Xml.XmlFile TaskAction="AddElement"
                                       File="$(DependDBConfigurationFile)"
                                       XPath="$(DependDBAssemblyXPath)"
                                       Element="Assembly"
                                       InnerText="%(DependDBBinaryFiles.Identity)"
                                       Namespaces="@(_dependDBConfigurationNamespaces)"/>
                                       
    <MSBuild.ExtensionPack.Xml.XmlFile TaskAction="RemoveElement"
                                       File="$(DependDBConfigurationFile)"
                                       XPath="$(DependDBXReferencerXPath)"
                                       Element="ReportGenerator"
                                       Namespaces="@(_dependDBConfigurationNamespaces)"
                                       Condition="'$(DependDBExecuteXReferencer)' == 'False'"/>
  </Target>
  
  <!-- Internal targets: Uploading -->
  <Target Name="UploadToDependDBInternal" DependsOnTargets="CreatePackageProperties;CreateDependDBProperties">
    <Error Text="The property 'DependDBProjectName' is not set." Condition="'$(DependDBProjectName)' == ''" />
    <Error Text="The property 'DependDBProjectOutputDirectory' is not set." Condition="'$(DependDBProjectOutputDirectory)' == ''" />
    <Error Text="The property 'DependDBUploadPath' is not set." Condition="'$(DependDBUploadPath)' == ''" />
    
    <Message Text="Uploading to DependDB, ProjectName=$(DependDBProjectName)" Importance="High"/>
    
    <!-- Copy build processor output to upload path -->
    <ItemGroup>
      <SourceFiles Include="$(DependDBProjectOutputDirectory)*.xml" Exclude="$(DependDBConfigurationFile)"/>
    </ItemGroup>
    <Copy SourceFiles="@(SourceFiles)" DestinationFolder="$(DependDBUploadPath)"/>
    
    <Message Text="Done uploading to DependDB, ProjectName=$(DependDBProjectName)" Importance="High"/>
  </Target>

</Project>