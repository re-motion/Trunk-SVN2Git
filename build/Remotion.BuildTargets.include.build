<?xml version="1.0" encoding="UTF-8" ?>
<!-- This file is part of the re-motion Core Framework (www.re-motion.org)
 ! Copyright (C) 2005-2009 rubicon informationstechnologie gmbh, www.rubicon.eu
 ! 
 ! The re-motion Core Framework is free software; you can redistribute it 
 ! and/or modify it under the terms of the GNU Lesser General Public License 
 ! as published by the Free Software Foundation; either version 2.1 of the 
 ! License, or (at your option) any later version.
 ! 
 ! re-motion is distributed in the hope that it will be useful, 
 ! but WITHOUT ANY WARRANTY; without even the implied warranty of 
 ! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 ! GNU Lesser General Public License for more details.
 ! 
 ! You should have received a copy of the GNU Lesser General Public License
 ! along with re-motion; if not, see http://www.gnu.org/licenses.
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Target Name="CreateActiveConfiguration">
    <Error Text="The property 'ConfigurationID' is not set." Condition="'$(ConfigurationID)' == ''" />

    <ItemGroup>
      <_activeConfiguration Include="@(AllConfigurations)" Condition="%(AllConfigurations.Identity) == $(ConfigurationID)"/>
    </ItemGroup>

    <PropertyGroup>
      <ActiveConfigurationName>%(_activeConfiguration.Name)</ActiveConfigurationName>
      <ActiveConfigurationRunTests>%(_activeConfiguration.RunTests)</ActiveConfigurationRunTests>
      <ActiveConfigurationGenerateDocumentation>%(_activeConfiguration.GenerateDocumentation)</ActiveConfigurationGenerateDocumentation>
      <ActiveConfigurationIncludeBinaries>%(_activeConfiguration.IncludeBinaries)</ActiveConfigurationIncludeBinaries>
      <ActiveConfigurationOutputDirectory>$(BinariesDirectory)%(_activeConfiguration.OutputDirectory)</ActiveConfigurationOutputDirectory>
      <ActiveConfigurationFramework>%(_activeConfiguration.Framework)</ActiveConfigurationFramework>
      <ActiveConfigurationAssemblyRevision>%(_activeConfiguration.AssemblyRevision)</ActiveConfigurationAssemblyRevision>
    </PropertyGroup>
  </Target>

  <Target Name="CreateActivePackage">
    <Error Text="The property 'PackageID' is not set." Condition="'$(PackageID)' == ''" />
    <Error Text="The property 'SolutionDirectory' is not set." Condition="'$(SolutionDirectory)' == ''" />

    <ItemGroup>
      <_activePackage Include="@(AllPackages)" Condition="%(AllPackages.Identity) == $(PackageID)"/>
    </ItemGroup>

    <PropertyGroup>
      <ActivePackageCompanyName>%(_activePackage.CompanyName)</ActivePackageCompanyName>
      <ActivePackageCompanyUrl>%(_activePackage.CompanyUrl)</ActivePackageCompanyUrl>
      <ActivePackageCopyright>%(_activePackage.Copyright)</ActivePackageCopyright>
      <ActivePackageProductName>%(_activePackage.ProductName)</ActivePackageProductName>
      <ActivePackageProductNameShort>%(_activePackage.ProductNameShort)</ActivePackageProductNameShort>
      <ActivePackageDocumentationRootPageTemplateFile>$(SolutionDirectory)%(_activePackage.DocumentationRootPageTemplateFile)</ActivePackageDocumentationRootPageTemplateFile>
    </PropertyGroup>
  </Target>

  <Target Name="AddAdditionalMetadataToReleaseOutputFiles">
    <ItemGroup>
      <_projectFiles Remove="@(_projectFiles)" />
      <_projectFiles Include="%(ReleaseOutputFiles.MSBuildSourceProjectFile)">
        <ReleaseOutputFileIdentity>%(Identity)</ReleaseOutputFileIdentity>
        <MSBuildSourceProjectFile>%(MSBuildSourceProjectFile)</MSBuildSourceProjectFile>
        <MSBuildSourceTargetName>%(MSBuildSourceTargetName)</MSBuildSourceTargetName>
        <AssemblyName>%(FileName)</AssemblyName>
      </_projectFiles>
    </ItemGroup>

    <ItemGroup>
      <ReleaseOutputFiles Remove="@(ReleaseOutputFiles)" />
      <ReleaseOutputFiles Include="%(_projectFiles.ReleaseOutputFileIdentity)">
        <MSBuildSourceProjectFile>%(MSBuildSourceProjectFile)</MSBuildSourceProjectFile>
        <MSBuildSourceTargetName>%(MSBuildSourceTargetName)</MSBuildSourceTargetName>
        <AssemblyName>%(AssemblyName)</AssemblyName>
        <ProjectDirectory>%(RootDir)%(Directory)</ProjectDirectory>
      </ReleaseOutputFiles>
    </ItemGroup>
  </Target>

  <Target Name="CleanFolders">
    <Error Text="The property 'OutputDirectory' is not set." Condition="'$(OutputDirectory)' == ''" />
    <Error Text="The property 'LogDirectory' is not set." Condition="'$(LogDirectory)' == ''" />
    <Error Text="The property 'TempDirectory' is not set." Condition="'$(TempDirectory)' == ''" />
    <Error Text="The property 'BinariesDirectory' is not set." Condition="'$(BinariesDirectory)' == ''" />

    <Exec Command="rmdir /Q /S $(OutputDirectory)" />
    <Exec Command="rmdir /Q /S $(LogDirectory)" />
    <Exec Command="rmdir /Q /S $(TempDirectory)" />
    <Exec Command="rmdir /Q /S $(BinariesDirectory)" />
  </Target>

  <Target Name="CreateLogDirectory">
    <Error Text="The property 'LogDirectory' is not set." Condition="'$(LogDirectory)' == ''" />

    <MakeDir Directories="$(LogDirectory)" />
  </Target>

  <Target Name="CheckVersion">
    <Error Text="The property 'Version' is not set." Condition="'$(Version)' == ''" />

    <Error Text="Only 3-part version numbers are supported." Condition="$([System.Version]::Parse ($(Version)).Major) == -1" />
    <Error Text="Only 3-part version numbers are supported." Condition="$([System.Version]::Parse ($(Version)).Minor) == -1" />
    <Error Text="Only 3-part version numbers are supported." Condition="$([System.Version]::Parse ($(Version)).Build) == -1" />
    <Error Text="Only 3-part version numbers are supported." Condition="$([System.Version]::Parse ($(Version)).Revision) != -1" />

  </Target>
  
  <Target Name="LogConfiguration" DependsOnTargets="CreateActiveConfiguration">
    <Message Text="Current configuration: $(ConfigurationID)"/>
    <Message Text="* Name: $(ActiveConfigurationName)"/>
  </Target>

  <Target Name="CleanProjects" DependsOnTargets="CreateActiveConfiguration">
    <Message Text="Cleaning projects, ConfigurationID=$(ConfigurationID)" Importance="High"/>

    <Error Text="The property 'ActiveConfigurationName' is not set." Condition="'$(ActiveConfigurationName)' == ''" />

    <MSBuild Projects="@(ReleaseProjectFiles);@(UnitTestProjectFiles)"
             Targets="Clean"
             Properties="Configuration=$(ActiveConfigurationName);"/>

    <Message Text="Done cleaning projects, ConfigurationID=$(ConfigurationID)" Importance="High"/>
  </Target>
  
  <Target Name="BuildReleaseProjects" DependsOnTargets="CreateActiveConfiguration;UpdateAssemblyInfos">
    <Message Text="Building release projects, ConfigurationID=$(ConfigurationID)" Importance="High"/>

    <Error Text="The property 'ActiveConfigurationName' is not set." Condition="'$(ActiveConfigurationName)' == ''" />
    <Error Text="The property 'SolutionKeyFile' is not set." Condition="'$(SolutionKeyFile)' == ''" />

    <MSBuild Projects ="@(ReleaseProjectFiles)"
             ContinueOnError="false"
             Properties="Configuration=$(ActiveConfigurationName);AssemblyOriginatorKeyFile=$(SolutionKeyFile);">
      <Output ItemName="ReleaseOutputFiles" TaskParameter="TargetOutputs"/>
    </MSBuild>

    <Message Text="Done building release projects, ConfigurationID=$(ConfigurationID)" Importance="High"/>
  </Target>

  <Target Name="BuildTestProjects" DependsOnTargets="CreateActiveConfiguration;UpdateAssemblyInfos">
    <Message Text="Building test projects, ConfigurationID=$(ConfigurationID)" Importance="High"/>

    <Error Text="The property 'ActiveConfigurationName' is not set." Condition="'$(ActiveConfigurationName)' == ''" />

    <MSBuild Projects ="@(UnitTestProjectFiles);@(IntegrationTestProjectFiles)"
             ContinueOnError="false"
             Properties="Configuration=$(ActiveConfigurationName);AssemblyOriginatorKeyFile=$(SolutionKeyFile);">
      <Output ItemName="TestOutputFiles" TaskParameter="TargetOutputs"/>
    </MSBuild>

    <Message Text="Done building test projects, ConfigurationID=$(ConfigurationID)" Importance="High"/>
  </Target>

  <Target Name="RunTests" DependsOnTargets="CreateActiveConfiguration;CreateLogDirectory;BuildTestProjects">
    <Message Text="Running tests, ConfigurationID=$(ConfigurationID)" Importance="High"/>

    <MSBuild.Community.Tasks.NUnit Assemblies="%(TestOutputFiles.FullPath)"
                                   OutputXmlFile="$(LogDirectory)\%(TestOutputFiles.Filename).$(ActiveConfigurationName).xml"
                                   XsltTransformFile="$(MSBuildProjectDirectory)\NUnitResult.xslt"
                                   ToolPath="$(NUnitToolPath)"
                                   Condition="$(ActiveConfigurationRunTests) == 'True'"/>
    
    <!--<MSBuild.ExtensionPack.CodeQuality.NUnit ToolPath="$(NUnitToolPath)"
                                             Assemblies="%(TestOutputFiles.FullPath)"
                                             Use32Bit="True"
                                             OutputXmlFile="$(LogDirectory)%(TestOutputFiles.Filename).$(ActiveConfigurationName).xml"
                                             Condition="$(ActiveConfigurationRunTests) == 'True'"/>-->

    <Message Text="Done running tests, ConfigurationID=$(ConfigurationID)" Importance="High"/>
  </Target>

  <Target Name="UpdateAssemblyInfos" DependsOnTargets="CreateActiveConfiguration" Condition="$(Version) != ''">
    <Message Text="Updating assembly infos, ConfigurationID=$(ConfigurationID)" Importance="High"/>

    <Error Text="The property 'SolutionDirectory' is not set." Condition="'$(SolutionDirectory)' == ''" />
    <Error Text="The property 'ConfigurationID' is not set." Condition="'$(ConfigurationID)' == ''" />

    <ItemGroup>
      <_assemblyInfos Remove="@(_assemblyInfoFiles)"/>
      <_assemblyInfos Include="$(SolutionDirectory)%(AllPackages.AssemblyInfoFile)">
        <Copyright>%(Copyright)</Copyright>
        <CompanyName>%(CompanyName)</CompanyName>
        <ProductName>%(ProductName)</ProductName>
      </_assemblyInfos>
    </ItemGroup>

    <PropertyGroup>
      <_fullVersion>$(Version).$(ActiveConfigurationAssemblyRevision)</_fullVersion>
      <_configuration>.NET Framework: $(ActiveConfigurationFramework), build type: $(ConfigurationID)</_configuration>
    </PropertyGroup>

    <Error Text="The version ($(Version) is not valid. It must be in the format 'Major.Minor.Build'."
           Condition="$([System.Version]::Parse ($(_fullVersion))) == $(fullVersion)"/>
    
    <MSBuild.ExtensionPack.Framework.AssemblyInfo AssemblyInfoFiles="%(_assemblyInfos.Identity)"
                                                  AssemblyVersion="$(_fullVersion)"
                                                  AssemblyFileVersion="$(_fullVersion)"
                                                  AssemblyConfiguration="$(_configuration)"
                                                  AssemblyCopyright="%(_assemblyInfos.Copyright)"
                                                  AssemblyCompany="%(_assemblyInfos.CompanyName)"
                                                  AssemblyProduct="%(_assemblyInfos.ProductName)"/>

    <Message Text="Done updating assembly infos, ConfigurationID=$(ConfigurationID)" Importance="High"/>
  </Target>

</Project>