<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright (C) 2005 - 2008 rubicon informationstechnologie gmbh
 !
 ! This program is free software: you can redistribute it and/or modify it under 
 ! the terms of the re:motion license agreement in license.txt. If you did not 
 ! receive it, please visit http://www.re-motion.org/licensing.
 ! 
 ! Unless otherwise provided, this software is distributed on an "AS IS" basis, 
 ! WITHOUT WARRANTY OF ANY KIND, either express or implied. 
-->

<BocEnumValue>
  <Class>
    <remarks>
      
      <h4 class="dtH4">Supported Data Types</h4>
      <para>
        The control's <see cref="Value"/> can be assigned <see cref="Enum"/> values or <see langword="null"/>. 
      </para><para>
        The control's <see cref="Property"/> supports the <see cref="IBusinessObjectEnumerationProperty"/>.
      </para>
      
      <h4 class="dtH4">Standards Conformance</h4>
      <list type="table">
        <listheader>
          <term>Standard</term>
          <description>Conformance Information</description>
        </listheader>
        <item>
          <term>HTML 4.01</term>
          <description>valid, unless <see cref="WebControl.Enabled"/> is set to <see langword="false"/>. </description>
        </item>
        <item>
          <term>XHTML 1.0</term>
          <description>not valid</description>
        </item>
        <item>
          <term>WAI WCAG 1.0</term>
          <description>
            <para>level A conform</para>
            <para>
              Enabling auto post back can break compliance with priority 1 checkpoint 6.3 if the post back is 
              required for using the page.
            </para><para>
              Priority 2 checkpoint 12.4 is not met if the control is displayed as a drop down box.
              Internet Explorer resets the selection when the user clicks the label for this control. The label is
              therefor not associated with the control.
            </para>
          </description>
        </item>        
      </list>

      <h4 class="dtH4">Usage Notes</h4>      
      <para>
        See the <see cref="CreateValidators"/> method for the validators provided by this control.        
      </para><para>
        If the <see cref="BusinessObjectBoundWebControl.DataSource"/> and 
        the <see cref="BusinessObjectBoundWebControl.PropertyIdentifier"/> properties are not set, the 
        control is unbound. In that case, the <see cref="Property"/> and the <see cref="Value"/> properties must be 
        set programmatically. In order to get the value after the user has changed it, <see cref="Value"/> must be
        read.
      </para><para>
        The <see cref="Property"/> must be set in order to get or set the <see cref="Value"/>
        and populate the list of values. In typical scenarios this means not later than the <b>Load</b> phase.
      </para><para>
        The control provides a default <b>CSS Class</b>, applied to the top level element: <c>bocEnumValue</c>.
      </para><para>
        The control supports auto-postback. Use the <see cref="ListControlStyle"/>'s 
        <see cref="Remotion.ObjectBinding.Web.UI.Controls.ListControlStyle.AutoPostBack"/> property to enable this behavior.
      </para>

      <h4 class="dtH4">Localization Support</h4>
      <para>
        The resources required by this control are defined by the <see cref="BocEnumValue.ResourceIdentifier"/> 
        enum. See the <b>ResourceIdentifier</b>'s documentation for details on localization.
      </para><para>
        The control supports resource dispatching to its properties through the 
        <see cref="Remotion.Web.UI.Globalization.ResourceDispatcher"/>.
        Use the following resource identifiers for dispatching strings to the <b>BocEnumValue</b>
        or use the <b>global resource identifier</b> syntax for setting the resource identifier in the propery.
      </para>
      <list type="table">
        <listheader>
          <term>Property</term>
          <description>Resource Identifier</description>
        </listheader>
        <item>
          <term> <see cref="ErrorMessage"/> </term>
          <description>
            <para> &lt;BocEnumValue Resource ID&gt;:ErrorMessage </para>
            <para> e.g. auto:MyBocEnumValue:ErrorMessage </para>
          </description>
        </item>
      </list>
      
      <h4 class="dtH4">Inner Workings</h4>
      <para>
        During edit mode, the control is displayed using a <see cref="System.Web.UI.WebControls.ListControl"/>.
      </para><para>
        During read-only mode, the control's value is displayed using a <see cref="System.Web.UI.WebControls.Label"/>.
      </para><para>
        Use the <see cref="ListControl"/> and <see cref="Label"/> properties to access these controls directly.
      </para><para>
        The control uses the view state to cache the value between postbacks. If the control is data bound,
        a call to <see cref="SaveValue"/> with <b>interim</b> set <see langword="true"/> is required to save the
        value back into the data source.
      </para>

      <list type="table">
        <listheader>
          <term>State</term>
          <description>Behaviour</description>
        </listheader>
        <item>
          <term>
            Read-Only / <see cref="Value"/> is not <see langword="null"/>
          </term>
          <description>
            Queries the <see cref="IBusinessObjectEnumerationProperty"/> for the
            <see cref="IEnumerationValueInfo.DisplayName"/>, which is then displayed.
          </description>
        </item>
        <item>
          <term>
            Read-Only / <see cref="Value"/> is <see langword="null"/>
          </term>
          <description>
            Displays no text.
          </description>
        </item>
        <item>
          <term>
            Edit Mode / <see cref="Value"/> is not <see langword="null"/>
          </term>
          <description>
            Text is automatically provided by the <see cref="ListControl"/>.
            Queries the <see cref="IBusinessObjectEnumerationProperty"/> for the
            <see cref="IEnumerationValueInfo.Identifier"/>, which is then used to select the current item.
          </description>
        </item>
        <item>
          <term>
            Edit Mode / <see cref="Value"/> is <see langword="null"/>
          </term>
          <description>
            <para>
              Text is automatically provided by the <see cref="ListControl"/>. The undefined item is selected.
            </para><para>
              If the control is required, the undefined item is removed, once a valid item is selected.
            </para>
          </description>
        </item>
        <item>
          <term>
            Edit Mode / <see cref="Value"/> is set to an item not in the list.
          </term>
          <description>
            <para>
              The new item is added to the list and displayed in the <see cref="ListControl"/>. 
            </para><para>
              If <see cref="Value"/> is <see langword="null"/> but the control is required, the undefined item is
              added to the <see cref="ListControl"/> unitl the selection is again changed to a valid item.
            </para><para>
              If <see cref="Value"/> is a disabled enumeration value, it is added to the 
              <see cref="ListControl"/> unitl the selection is again changed to a valid item.
              When this happens, the disabled item is removed from the <see cref="ListControl"/>.
            </para>
          </description>
        </item>
      </list>
      <para>
        Initalizing or forcing the control's selected value to a disabled enumeration value 
        causes no validation error. This means that an existing property can retain its value 
        as long as it is not deselected, upon which the disabled value is removed from the list 
        of valid choices. This behaviour mimics the Fabasoft enum behaviour.
      </para>
    </remarks>
  </Class>
  <LoadPostData>
    <remarks>
      <para>
        Sets the new value and the <see cref="BusinessObjectBoundEditableWebControl.IsDirty"/> flag if the value 
        has changed.
      </para><para>
        Evaluates the value of the <see cref="ListControl"/>.
      </para>
      <note type="inheritinfo">
        Overrive this method to change the way of detecting a changed value when read from the 
        <paramref name="postCollection"/>.
      </note>
    </remarks>
    <param name="postDataKey"> The key identifier for this control. </param>
    <param name="postCollection"> The collection of all incoming name values.  </param>
    <returns>
      <see langword="true"/> if the server control's state changes as a result of the post back; 
      otherwise <see langword="false"/>.
    </returns>
  </LoadPostData>
  <LoadValue>
    <param name="interim"> Specifies whether this is the initial loading, or an interim loading. </param>
    <remarks>
      <para>
        Loads the <see cref="Value"/> from the <see cref="BusinessObjectBoundWebControl.DataSource"/> 
        if <paramref name="interim"/> is <see langword="false"/>. 
      </para><para>
        Requires a <see cref="Property"/>, a <see cref="BusinessObjectBoundWebControl.DataSource"/> and 
        a <see cref="BusinessObjectDataSourceControl.BusinessObject">DataSource.BusinessObject</see>.
      </para><para>
        <see cref="BusinessObjectBoundEditableWebControl.IsDirty"/> is <see langword="false"/> after invoking
        <see cref="LoadValue"/> with <paramref name="interim"/> <see langword="false"/>.
      </para>
    </remarks>
    <seealso cref="IBusinessObjectBoundControl.LoadValue">IBusinessObjectBoundControl.LoadValue</seealso>
  </LoadValue>
  <LoadUnboundValue>
    <param name="interim"> Specifies whether this is the initial loading, or an interim loading. </param>
    <remarks>
      <para>
        Populates the <see cref="Value"/> with the provided <paramref name="value"/> if <paramref name="interim"/> 
        is <see langword="false"/>. 
      </para><para>
        <see cref="BusinessObjectBoundEditableWebControl.IsDirty"/> is <see langword="false"/> after invoking
        <see cref="LoadValue"/> with <paramref name="interim"/> <see langword="false"/>.
      </para>
    </remarks>
  </LoadUnboundValue>
  <SaveValue>
    <param name="interim"> Specifies whether this is the final saving or an interim saving. </param>
    <remarks>
      <para>
        Saves the <see cref="Value"/> into the <see cref="BusinessObjectBoundWebControl.DataSource"/> 
        if <paramref name="interim"/> is <see langword="false"/> and the control's 
        <see cref="BusinessObjectBoundEditableWebControl.IsReadOnly"/> property evaluates <see langword="false"/>. 
      </para><para>
        Requires a <see cref="Property"/>, a <see cref="BusinessObjectBoundWebControl.DataSource"/> and 
        a <see cref="BusinessObjectDataSourceControl.BusinessObject">DataSource.BusinessObject</see>.
      </para><para>
        <see cref="BusinessObjectBoundEditableWebControl.IsDirty"/> will be <see langword="false"/> after invoking
        <see cref="SaveValue"/> with <paramref name="interim"/> <see langword="false"/>.
      </para>
    </remarks>
    <seealso cref="IBusinessObjectBoundEditableControl.SaveValue">IBusinessObjectBoundEditableControl.SaveValue</seealso>
  </SaveValue>
  <CreateValidators>
    <remarks>
      Generates a <see cref="CompareValidator"/> checking that the selected item is not the null-item if the 
      control is in edit mode and input is required.
    </remarks>
    <seealso cref="BusinessObjectBoundEditableWebControl.CreateValidators">BusinessObjectBoundEditableWebControl.CreateValidators</seealso>
  </CreateValidators>
  <Value>
    <value> 
      The enumeration value currently displayed or <see langword="null"/> if no item / the null item is selected.
    </value>
    <remarks>
      <para>
        Used for communicating with the outside world.
      </para><para>
        Must be serializable.
      </para><para>
         Must be part of the enum identified by <see cref="IBusinessObjectProperty.PropertyType"/>.
      </para><para>
        Relies on the implementation of <see cref="IBusinessObjectEnumerationProperty.GetValueInfoByValue"/>
        for verification of the passed enum value.
      </para><para>
        If  <see cref="Property"/> is <see langword="null"/>, no type checking can be performed.
      </para><para>
        The dirty state is reset when the value is set.      
      </para>
    </remarks>
  </Value>
</BocEnumValue>
