<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Target Name="ValidateProjects">
    <Error Text="Project '%(ProjectFiles.Identity)' has invalid project type: '%(ProjectFiles.ProjectType)'"
           Condition="!('%(ProjectFiles.ProjectType)' == 'Release' Or '%(ProjectFiles.ProjectType)' == 'UnitTests' Or '%(ProjectFiles.ProjectType)' == 'Support')" />
  </Target>
  
  <Target Name="CleanDestinationFolder">
    <Error Text="The property 'DestinationFolder' is not set." Condition="'$(DestinationFolder)' == ''" />

    <Exec Command="rmdir /Q /S $(DestinationFolder)" />
  </Target>

  <Target Name="CreateLogDirectory">
    <Error Text="The property 'LogDirectory' is not set." Condition="'$(LogDirectory)' == ''" />

    <MakeDir Directories="$(LogDirectory)" />
  </Target>

  <Target Name="LogConfiguration">
    <Message Text="Current configuration: $(ConfigurationID)" Importance="high"/>
    <Message Text="* Name: %(AllConfigurations.Name)" Condition="%(AllConfigurations.Identity) == $(ConfigurationID) AND %(AllConfigurations.RunTests) == 'True'"/>
    <Message Text="* Runs Tests" Condition="%(AllConfigurations.Identity) == $(ConfigurationID) AND %(AllConfigurations.RunTests) == 'True'"/>
  </Target>

  <Target Name="CleanProjects">
    <MSBuild Projects="@(ProjectFiles)"
             Targets="Clean"
             Properties="Configuration=$(Configuration);"/>
  </Target>

  <Target Name="BuildReleaseProjects" DependsOnTargets="ValidateProjects">
    <MSBuild Projects ="@(ProjectFiles)"
             Condition="'%(ProjectFiles.ProjectType)' == 'Release'"
             ContinueOnError="false"
             Properties="Configuration=$(Configuration);">
      <Output ItemName="ReleaseOutputFiles" TaskParameter="TargetOutputs"/>
    </MSBuild>
  </Target>

  <Target Name="BuildTestProjects" DependsOnTargets="ValidateProjects">
    <MSBuild Projects ="@(ProjectFiles)"
             Condition="'%(ProjectFiles.ProjectType)' == 'UnitTests'"
             ContinueOnError="false"
             Properties="Configuration=$(Configuration);">
      <Output ItemName="TestOutputFiles" TaskParameter="TargetOutputs"/>
    </MSBuild>
  </Target>

  <Target Name="RunTests" DependsOnTargets="CreateLogDirectory;BuildTestProjects">
    <PropertyGroup>
      <_isActive Condition="%(AllConfigurations.Identity) == $(ConfigurationID) AND %(AllConfigurations.RunTests) == 'True'">True</_isActive>      
    </PropertyGroup>
    <MSBuild.Community.Tasks.NUnit Assemblies="%(TestOutputFiles.FullPath)" 
                                   OutputXmlFile="$(LogDirectory)\%(TestOutputFiles.Filename).xml" 
                                   ToolPath="$(NUnitToolPath)"
                                   Condition="$(_isActive) == 'True'"/>
  </Target>
  
  <Target Name="CopyReleaseProjectsToDestinationFolder" DependsOnTargets="BuildReleaseProjects">
    <ItemGroup>
      <_CompleteOutputFiles Remove="@(_CompleteOutputFiles)" />
      <_CompleteOutputFiles Include="%(RootDir)%(ReleaseOutputFiles.Directory)**" />
    </ItemGroup>

    <PropertyGroup>
      <_ConfigurationDestinationFolder>$(DestinationFolder)$(ConfigurationID)\</_ConfigurationDestinationFolder>
    </PropertyGroup>

    <PropertyGroup>
      <_isActive Condition="%(AllConfigurations.Identity) == $(ConfigurationID) AND %(AllConfigurations.DestinationFolder) != ''">True</_isActive>
    </PropertyGroup>

    <Copy SourceFiles="@(_CompleteOutputFiles)"
          DestinationFiles="@(_CompleteOutputFiles->'$(_ConfigurationDestinationFolder)%(RecursiveDir)%(Filename)%(Extension)')"
          Condition="$(_isActive) == 'True'"/>
  </Target>


</Project>