<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Target Name="CreatePackageProperties">
    <Error Text="The target 'CreatePackageProperties' is not implemented." />
  </Target>

  <Target Name="CreateSourceFiles" DependsOnTargets="CreateStandardExcludes">
    <Error Text="The target 'CreateSourceFiles' is not implemented." />
  </Target>

  <Target Name="CreateBinaryFiles" DependsOnTargets="CreateStandardExcludes">
    <Error Text="The target 'CreateBinaryFiles' is not implemented." />
  </Target>

  <Import Project="Remotion.Tasks.include.build" />

  <PropertyGroup>
    <MSBuildCommunityTasksPath>$(SolutionDirectory)\prereq\Tools\MSBuildCommunityTasks\</MSBuildCommunityTasksPath>
    <MSBuildExtensionPackPath>$(SolutionDirectory)\prereq\Tools\MSBuildExtensionPack\</MSBuildExtensionPackPath>
    <JiraReleaseNoteGeneratorPath>$(SolutionDirectory)\prereq\Tools\JiraReleaseNoteGenerator\</JiraReleaseNoteGeneratorPath>
    <CodeplexReleaseToolPath>$(SolutionDirectory)\prereq\Tools\CodeplexReleaseTool\</CodeplexReleaseToolPath>
  </PropertyGroup>

  <Target Name="CreatePackages" DependsOnTargets="CreateSourcePackage;CreateBinaryPackage;"/>

  <Target Name="DeployPackages" DependsOnTargets="CreateReleaseNotes;UploadToCodePlex" />
  <!--<Target Name="DeployPackages" DependsOnTargets="CreateReleaseNotes;CopyToArchive;CopyToWebShare;UploadToCodePlex" />-->
  
  <Target Name="CreateSourcePackage" DependsOnTargets="CreateSourceZipFileProperty;CreateSourceFiles;CreateOutputDirectory;">
    <Error Text="The property 'SolutionDirectory' is not set." Condition="'$(SolutionDirectory)' == ''" />

    <MSBuild.ExtensionPack.Compression.DNZip TaskAction="Create" 
                                             ZipFileName="$(SourceZipFile)" 
                                             RemoveRoot="$(SolutionDirectory)" 
                                             CompressFiles="@(SourceFiles)" />
  </Target>

  <Target Name="CreateSourceZipFileProperty" DependsOnTargets="CreatePackageProperties">
    <Error Text="The property 'OutputDirectory' is not set." Condition="'$(OutputDirectory)' == ''" />
    <Error Text="The property 'Version' is not set." Condition="'$(Version)' == ''" />

    <PropertyGroup>
      <SourceZipFile>$(OutputDirectory)$(PackageName)_SourceCode_$(Version).zip</SourceZipFile>
    </PropertyGroup>
  </Target>

  <Target Name="CreateBinaryPackage" DependsOnTargets="CreateBinaryZipFileProperty;CreateBinaryFiles;CreateOutputDirectory;">
    <Error Text="The property 'OutputDirectory' is not set." Condition="'$(OutputDirectory)' == ''" />

    <MSBuild.ExtensionPack.Compression.DNZip TaskAction="Create" 
                                             ZipFileName="$(BinaryZipFile)" 
                                             RemoveRoot="$(BinariesDirectory)" 
                                             CompressFiles="@(BinaryFiles)" />
  </Target>

  <Target Name="CreateBinaryZipFileProperty" DependsOnTargets="CreatePackageProperties">
    <Error Text="The property 'OutputDirectory' is not set." Condition="'$(OutputDirectory)' == ''" />
    <Error Text="The property 'Version' is not set." Condition="'$(Version)' == ''" />

    <PropertyGroup>
      <BinaryZipFile>$(OutputDirectory)$(PackageName)_$(Version).zip</BinaryZipFile>
    </PropertyGroup>
  </Target>

  <Target Name="CreateOutputDirectory">
    <Error Text="The property 'OutputDirectory' is not set." Condition="'$(OutputDirectory)' == ''" />

    <MakeDir Directories="$(OutputDirectory)" />
  </Target>

  <Target Name="CreateStandardExcludes">
    <Error Text="The property 'SolutionDirectory' is not set." Condition="'$(SolutionDirectory)' == ''" />

    <ItemGroup>
      <StandardExcludes Include="$(SolutionDirectory)**\.svn\**"/>
      <StandardExcludes Include="$(SolutionDirectory)**\_svn\**"/>

      <StandardExcludes Include="$(SolutionDirectory)**\*.log" />
      <StandardExcludes Include="$(SolutionDirectory)**\*.snk" />
      <StandardExcludes Include="$(SolutionDirectory)**\*.suo" />
      <StandardExcludes Include="$(SolutionDirectory)**\*.user" />
    </ItemGroup>
  </Target>

  <Target Name="CreateReleaseNotes" DependsOnTargets="CreateBinaryZipFileProperty;CreateSourceZipFileProperty;CreateReleaseNotesDirectoryProperty">
    <Error Text="Binary zip-file $(BinaryZipFile) is missing." Condition="!Exists('$(BinaryZipFile)')"  />

    <Exec Command="JiraReleaseNoteGenerator.exe $(Version) $(ReleaseNotesDirectory)"
          WorkingDirectory="$(JiraReleaseNoteGeneratorPath)" />

    <ItemGroup>
      <_releaseNoteFiles Remove="(_releaseNoteFiles)"/>
      <_releaseNoteFiles Include="$(ReleaseNotesDirectory)*.*"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.DNZip TaskAction="AddFiles"
                                             ZipFileName="$(BinaryZipFile)"
                                             RemoveRoot="$([System.IO.Directory]::GetParent ($(ReleaseNotesDirectory)))"
                                             CompressFiles="@(_releaseNoteFiles)" />

  </Target>

  <Target Name="CreateReleaseNotesDirectoryProperty" DependsOnTargets="CreatePackageProperties">
    <Error Text="The property 'ArchiveDirectory' is not set." Condition="'$(ArchiveDirectory)' == ''" />

    <PropertyGroup>
      <ReleaseNotesDirectory>$(ArchiveDirectory)$(PackageName)\release-notes\</ReleaseNotesDirectory>
    </PropertyGroup>
  </Target>

  <Target Name="UploadToCodePlex" DependsOnTargets="CreatePackageProperties">
    <Exec Command="CodeplexReleaseTool.exe createRelease /projectName:$(CodePlexProjectName) /releaseName:$(Version) /description:&quot;This is build $(Version) of re-linq. Find the complete release notes for the build here: [url:Release Notes|https://www.re-motion.org/jira/secure/IssueNavigator.jspa?reset=true&amp;jqlQuery=project+%3D+RM+AND+component%3D%22$(ReleaseNotesComponentName)%22+AND+issuetype+in+%28Bug%2C+%22New+Feature%22%2C+%22Breaking+Change%22%2C+Performance%2C+Sub-Feature%29+AND+FixVersion%3D%22$(Version)%22++ORDER+BY+issuetype%2Ccomponent] &quot; /releaseDate:$([System.DateTime]::Now.ToString('dd.MM.yyyy')) /status:Stable /showToPublic:- /isDefaultRelease:- /username:$(CodeplexUsername) /password:$(CodeplexPassword)" 
          WorkingDirectory="$(CodeplexReleaseToolPath)" 
          Condition="$(CodePlexProjectName) != ''"></Exec>

    <Exec Command="CodeplexReleaseTool.exe uploadReleaseFiles /projectName:$(CodePlexProjectName) /releaseName:$(Version) /username:$(CodePlexUsername) /password:$(CodePlexPassword) /fileDisplayName:$([System.IO.Path]::GetFileName($(BinaryZipFile))) /fileDataPath:$(BinaryZipFile) /fileType:RuntimeBinary /username:$(CodeplexUsername) /password:$(CodeplexPassword)"
          WorkingDirectory="$(CodeplexReleaseToolPath)"
          Condition="$(CodePlexProjectName) != ''"></Exec>
    
    <Exec Command="CodeplexReleaseTool.exe uploadReleaseFiles /projectName:$(CodePlexProjectName) /releaseName:$(Version) /username:$(CodePlexUsername) /password:$(CodePlexPassword) /fileDisplayName:$([System.IO.Path]::GetFileName($(SourceZipFile))) /fileDataPath:$(SourceZipFile) /fileType:SourceCode /username:$(CodeplexUsername) /password:$(CodeplexPassword)"
          WorkingDirectory="$(CodeplexReleaseToolPath)"
          Condition="$(CodePlexProjectName) != ''"></Exec>
  </Target>

</Project>