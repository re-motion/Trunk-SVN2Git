<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright (C) 2005 - 2008 rubicon informationstechnologie gmbh
 !
 ! This program is free software: you can redistribute it and/or modify it under 
 ! the terms of the re:motion license agreement in license.txt. If you did not 
 ! receive it, please visit http://www.re-motion.org/licensing.
 ! 
 ! Unless otherwise provided, this software is distributed on an "AS IS" basis, 
 ! WITHOUT WARRANTY OF ANY KIND, either express or implied. 
-->

<EqualityUtility>
  <GetRotatedHashCode>
    <summary>
      Gets the hash code of the individual arguments, XOR'd with bits rotated.
    </summary>
    <remarks>
      <para>
        This method XOR's the hash codes of all individual arguments in order to create a compound hash code
        for the entire set of arguments. Between XOR's, the compound hash code is rotated by 11 bits in order
        to better distribute hash codes of types that aggregate their hash results toward the least-significant
        side of the result (small numbers, booleans).
      </para>
      <para>
        Overloads with type arguments are identical to the object-array version, they only reduce the amount
        of boxing going on (better performance).
      </para>
    </remarks>
  </GetRotatedHashCode>
</EqualityUtility>
