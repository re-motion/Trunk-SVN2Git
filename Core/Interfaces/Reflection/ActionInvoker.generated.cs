//------------------------------------------------------------------------------
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if 
// the code is regenerated.
//
//------------------------------------------------------------------------------
/* Copyright (C) 2005 - 2008 rubicon informationstechnologie gmbh
 *
 * This program is free software: you can redistribute it and/or modify it under 
 * the terms of the re:motion license agreement in license.txt. If you did not 
 * receive it, please visit http://www.re-motion.org/licensing.
 * 
 * Unless otherwise provided, this software is distributed on an "AS IS" basis, 
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. 
 */

using System;

namespace Remotion.Reflection
{
  public partial interface IActionInvoker
  {


    void With ();

    void With<A1, A2> (A1 a1, A2 a2);

    void With<A1, A2, A3> (A1 a1, A2 a2, A3 a3);

    void With<A1, A2, A3, A4> (A1 a1, A2 a2, A3 a3, A4 a4);

    void With<A1, A2, A3, A4, A5> (A1 a1, A2 a2, A3 a3, A4 a4, A5 a5);

    void With<A1, A2, A3, A4, A5, A6> (A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6);

    void With<A1, A2, A3, A4, A5, A6, A7> (A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7);
  }

  public partial struct ActionInvokerWrapper : IActionInvoker
  {


    public void With ()
    {
      _invoker.With ();
    }

    public void With<A1, A2> (A1 a1, A2 a2)
    {
      _invoker.With (a1, a2);
    }

    public void With<A1, A2, A3> (A1 a1, A2 a2, A3 a3)
    {
      _invoker.With (a1, a2, a3);
    }

    public void With<A1, A2, A3, A4> (A1 a1, A2 a2, A3 a3, A4 a4)
    {
      _invoker.With (a1, a2, a3, a4);
    }

    public void With<A1, A2, A3, A4, A5> (A1 a1, A2 a2, A3 a3, A4 a4, A5 a5)
    {
      _invoker.With (a1, a2, a3, a4, a5);
    }

    public void With<A1, A2, A3, A4, A5, A6> (A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6)
    {
      _invoker.With (a1, a2, a3, a4, a5, a6);
    }

    public void With<A1, A2, A3, A4, A5, A6, A7> (A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7)
    {
      _invoker.With (a1, a2, a3, a4, a5, a6, a7);
    }
  }
}
