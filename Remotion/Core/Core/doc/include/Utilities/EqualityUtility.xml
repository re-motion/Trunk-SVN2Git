<?xml version="1.0" encoding="UTF-8" ?>
<!-- This file is part of the re-motion Core Framework (www.re-motion.org)
 ! Copyright (C) 2005-2009 rubicon informationstechnologie gmbh, www.rubicon.eu
 ! 
 ! The re-motion Core Framework is free software; you can redistribute it 
 ! and/or modify it under the terms of the GNU Lesser General Public License 
 ! version 3.0 as published by the Free Software Foundation.
 ! 
 ! re-motion is distributed in the hope that it will be useful, 
 ! but WITHOUT ANY WARRANTY; without even the implied warranty of 
 ! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 ! GNU Lesser General Public License for more details.
 ! 
 ! You should have received a copy of the GNU Lesser General Public License
 ! along with re-motion; if not, see http://www.gnu.org/licenses.
-->
<EqualityUtility>
  <GetRotatedHashCode>
    <summary>
      Gets the hash code of the individual arguments, XOR'd with bits rotated.
    </summary>
    <remarks>
      <para>
        This method XOR's the hash codes of all individual arguments in order to create a compound hash code
        for the entire set of arguments. Between XOR's, the compound hash code is rotated by 11 bits in order
        to better distribute hash codes of types that aggregate their hash results toward the least-significant
        side of the result (small numbers, booleans).
      </para>
      <para>
        Overloads with type arguments are identical to the object-array version, they only reduce the amount
        of boxing going on (better performance).
      </para>
    </remarks>
  </GetRotatedHashCode>
</EqualityUtility>
