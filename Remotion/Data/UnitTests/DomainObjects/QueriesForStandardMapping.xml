<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright (C) 2005 - 2008 rubicon informationstechnologie gmbh
 !
 ! This program is free software: you can redistribute it and/or modify it under 
 ! the terms of the re:motion license agreement in license.txt. If you did not 
 ! receive it, please visit http://www.re-motion.org/licensing.
 ! 
 ! Unless otherwise provided, this software is distributed on an "AS IS" basis, 
 ! WITHOUT WARRANTY OF ANY KIND, either express or implied. 
-->

<queries 
    xmlns="http://www.re-motion.org/Data/DomainObjects/Queries/1.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.re-motion.org/Data/DomainObjects/Queries/1.0 ..\..\DomainObjects\Schemas\Queries.xsd">

  <query id="QueryWithoutParameter" type="scalar">
    <storageGroupType>Remotion.Data.UnitTests::DomainObjects.TestDomain.TestDomainAttribute</storageGroupType>
    <statement>select 42</statement>
  </query>

  <query id="OrderNoSumByCustomerNameQuery" type="scalar">
    <storageGroupType>Remotion.Data.UnitTests::DomainObjects.TestDomain.TestDomainAttribute</storageGroupType>
    <statement>
      select sum([OrderNo])
      from [Order] inner join [Company] on [CustomerID] = [Company].[ID]
      where [Company].[Name] = @customerName;
    </statement>
  </query>

  <query id="OrderNoSumForMultipleCustomers" type="scalar">
    <storageGroupType>Remotion.Data.UnitTests::DomainObjects.TestDomain.TestDomainAttribute</storageGroupType>
    <statement>
      select sum([OrderNo])
      from [Order] inner join [Company] on [CustomerID] = [Company].[ID]
      where [Company].[Name] in ({companyNames});
    </statement>
  </query>

  <query id="BulkUpdateQuery" type="scalar">
    <storageGroupType>Remotion.Data.UnitTests::DomainObjects.TestDomain.TestDomainAttribute</storageGroupType>
    <statement>
      update [Order] set [DeliveryDate] = '2006/01/01' where [CustomerID] = @customerID;
      select @@ROWCOUNT;
    </statement>
  </query>

  <query id="OrderQuery" type="collection">
    <storageGroupType>Remotion.Data.UnitTests::DomainObjects.TestDomain.TestDomainAttribute</storageGroupType>
    <statement>select [Order].* from [Order] where [CustomerID] = @customerID order by [OrderNo] asc;</statement>
    <collectionType>Remotion.Data.UnitTests.DomainObjects.TestDomain.OrderCollection, Remotion.Data.UnitTests</collectionType>
  </query>

  <query id="OrderByOfficialQuery" type="collection">
    <storageGroupType>Remotion.Data.UnitTests::DomainObjects.TestDomain.TestDomainAttribute</storageGroupType>
    <statement>select [Order].* from [Order] where [OfficialID] = @officialID order by [OrderNo] asc;</statement>
    <collectionType>Remotion.Data.UnitTests.DomainObjects.TestDomain.OrderCollection, Remotion.Data.UnitTests</collectionType>
  </query>

  <query id="CustomerTypeQuery" type="collection">
    <storageGroupType>Remotion.Data.UnitTests::DomainObjects.TestDomain.TestDomainAttribute</storageGroupType>
    <statement>select * from [Company] where [CustomerType] = @customerType order by [Name] asc;</statement>
  </query>

  <query id="QueryWithNullValues" type="collection">
    <storageGroupType>Remotion.Data.UnitTests::DomainObjects.TestDomain.TestDomainAttribute</storageGroupType>
    <statement>SELECT [Employee].* FROM [Computer] LEFT OUTER JOIN [Employee] ON [Computer].[EmployeeID] = [Employee].[ID] ORDER BY [Employee].[ID] asc;</statement>
  </query>

  <query id="QueryWithDuplicates" type="collection">
    <storageGroupType>Remotion.Data.UnitTests::DomainObjects.TestDomain.TestDomainAttribute</storageGroupType>
    <statement>SELECT [Order].* FROM [OrderItem] INNER JOIN [Order] ON [OrderItem].[OrderID] = [Order].[ID] WHERE [Order].[OrderNo] = 1;</statement>
  </query>

  <query id="QueryWithSpecificCollectionType" type="collection">
    <storageGroupType>Remotion.Data.UnitTests::DomainObjects.TestDomain.TestDomainAttribute</storageGroupType>
    <statement>select * from [Order];</statement>
    <collectionType>Remotion.Data.UnitTests::DomainObjects.TestDomain.SpecificOrderCollection</collectionType>
  </query>

  <query id="QueryWithAllDataTypes" type="collection">
    <storageGroupType>Remotion.Data.UnitTests::DomainObjects.TestDomain.TestDomainAttribute</storageGroupType>
    <!-- SQL statement with invalid XML character value. -->
    <statement>
    	 <![CDATA[
	      set ANSI_NULLS OFF;
	      select * from TableWithAllDataTypes where 
	        [Boolean] = @boolean and
	        [Byte] = @byte and
	        [Date] = @date and
	        [DateTime] = @dateTime and
	        [Decimal] = @decimal and
	        [Double] > @doubleLowerBound and [Double] < @doubleUpperBound and
	        [Enum] = @enum and
	        [Guid] = @guid and
	        [Int16] = @int16 and
	        [Int32] = @int32 and
	        [Int64] = @int64 and
	        [Single] > @singleLowerBound and [Single] < @singleUpperBound and
	        [String] = @string and
          -- Note: StringWithoutMaxLength cannot be used here, because it is of type 'text'.
	        [NaBoolean] = @naBoolean and
	        [NaByte] = @naByte and
	        [NaDate] = @naDate and
	        [NaDateTime] = @naDateTime and
	        [NaDecimal] = @naDecimal and
	        [NaDouble] > @naDoubleLowerBound and [NaDouble] < @naDoubleUpperBound and
	        [NaEnum] = @naEnum and
	        [NaGuid] = @naGuid and
	        [NaInt16] = @naInt16 and
	        [NaInt32] = @naInt32 and
	        [NaInt64] = @naInt64 and
	        [NaSingle] > @naSingleLowerBound and [NaSingle] < @naSingleUpperBound and
	        [StringWithNullValue] = @stringWithNullValue and
	        [NaBooleanWithNullValue] = @naBooleanWithNullValue and 
	        [NaByteWithNullValue] = @naByteWithNullValue and 
	        [NaDateWithNullValue] = @naDateWithNullValue and
	        [NaDateTimeWithNullValue] = @naDateTimeWithNullValue and
	        [NaDecimalWithNullValue] = @naDecimalWithNullValue and 	        
	        [NaDoubleWithNullValue] = @naDoubleWithNullValue and
	        [NaEnumWithNullValue] = @naEnumWithNullValue and
	        [NaGuidWithNullValue] = @naGuidWithNullValue and
	        [NaInt16WithNullValue] = @naInt16WithNullValue and
	        [NaInt32WithNullValue] = @naInt32WithNullValue and
	        [NaInt64WithNullValue] = @naInt64WithNullValue and
	        [NaSingleWithNullValue] = @naSingleWithNullValue;
	    ]]>      
    </statement>
  </query>

  <query id="StoredProcedureQuery" type="collection">
    <storageGroupType>Remotion.Data.UnitTests::DomainObjects.TestDomain.TestDomainAttribute</storageGroupType>
    <statement>rpf_testSPQuery</statement>
    <collectionType>Remotion.Data.UnitTests.DomainObjects.TestDomain.OrderCollection, Remotion.Data.UnitTests</collectionType>
  </query>

  <query id="StoredProcedureQueryWithParameter" type="collection">
    <storageGroupType>Remotion.Data.UnitTests::DomainObjects.TestDomain.TestDomainAttribute</storageGroupType>
    <statement>exec rpf_testSPQueryWithParameter @customerID</statement>
    <collectionType>Remotion.Data.UnitTests.DomainObjects.TestDomain.OrderCollection, Remotion.Data.UnitTests</collectionType>
  </query>

</queries>